version: "3"

services:

  # Note! The proxy and certbot services are only needed once when running the init-letsencrypt.sh script
  # after the init letsencrypt script has been run succesfully, use the docker-compose in the nginx directory instead
  proxy:
    container_name: proxy
    build:
      context: ./nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/production:/etc/nginx/conf.d
      - ./nginx/production/certbot/conf:/etc/letsencrypt
      - ./nginx/production/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/production/certbot/conf:/etc/letsencrypt
      - ./nginx/production/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

# Remember to start the network before running this file:
# $ docker network create crossword-net
#
# Then you can start each of the docker-compose.yml files like this:
# $ docker-compose -f project_one/docker-compose.yml up -d
# $ docker-compose -f project_two/docker-compose.yml up -d
networks:
  default:
    external:
      name: crossword-net
