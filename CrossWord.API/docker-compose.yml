version: "2"

# this can be used to test and develop locally
# first initialize the database and the db volume in the CrossWord.Scraper directory:
#   docker compose up db -d
#   docker compose down
# then start the database here:
#   docker compose up db -d

# to access the mysql db volume created by a different docker-compose.yml file by using external and the name
# see CrossWord.Scraper/docker-compose-yml
volumes:
  datafiles:
    external:
      name: crosswordscraper_datafiles

# Remember to start the network before running this file:
# $ docker network create mydockernet
#
# Then you can start each of the docker-compose.yml files like this:
# $ docker-compose -f project_one/docker-compose.yml up -d
# $ docker-compose -f project_two/docker-compose.yml up -d
networks:
  default:
    external:
      name: mydockernet

services:
  db:
    container_name: crosswordapi.db
    image: mysql:8.0.15
    volumes:
      - datafiles:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_TCP_PORT: 3360
    security_opt: # to fix the mbind: Operation not permitted log error
      - seccomp:unconfined
    ports:
      - "3360:3360"

  api:
    container_name: crosswordapi.api
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    expose:
      - "8000"
    ports:
      - "8000:8000"
    environment:
      - DBHOST=db
      - DBPORT=3360
      - DBUSER=root
      - DBPASSWORD=secret
      - DATABASE=dictionary
      - ASPNETCORE_ENVIRONMENT=Development
  